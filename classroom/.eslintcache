[{"D:\\SmartSetGo\\classroom\\src\\index.js":"1","D:\\SmartSetGo\\classroom\\src\\context\\context.js":"2","D:\\SmartSetGo\\classroom\\src\\App.js":"3","D:\\SmartSetGo\\classroom\\src\\lib\\firebase.js":"4","D:\\SmartSetGo\\classroom\\src\\routes\\Routes.js":"5","D:\\SmartSetGo\\classroom\\src\\components\\index.js":"6","D:\\SmartSetGo\\classroom\\src\\components\\CreateClass\\CreateClass.js":"7","D:\\SmartSetGo\\classroom\\src\\components\\JoinClass\\JoinClass.js":"8","D:\\SmartSetGo\\classroom\\src\\components\\Drawer\\Drawer.js":"9","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Main.js":"10","D:\\SmartSetGo\\classroom\\src\\components\\PostVideo\\PostVideo.js":"11","D:\\SmartSetGo\\classroom\\src\\components\\Announcment\\Announcment.js":"12","D:\\SmartSetGo\\classroom\\src\\components\\JoinedClasses\\JoinedClasses.js":"13","D:\\SmartSetGo\\classroom\\src\\components\\Login\\Login.js":"14","D:\\SmartSetGo\\classroom\\src\\components\\Header\\Header.js":"15","D:\\SmartSetGo\\classroom\\src\\components\\Assignmnets\\Assignments.js":"16","D:\\SmartSetGo\\classroom\\src\\components\\LectureNotes\\LectureNotes.js":"17","D:\\SmartSetGo\\classroom\\src\\components\\CreateClass\\Form.js":"18","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Tabs.js":"19","D:\\SmartSetGo\\classroom\\src\\components\\Header\\style.js":"20","D:\\SmartSetGo\\classroom\\src\\components\\Main\\CodeIde.js":"21","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Notes.js":"22","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Announce.js":"23","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Assignment.js":"24","D:\\SmartSetGo\\classroom\\src\\components\\Main\\Videos.js":"25","D:\\SmartSetGo\\classroom\\src\\components\\Main\\MaterialTheming.js":"26","D:\\SmartSetGo\\classroom\\src\\components\\Main\\CodeEditor\\components\\EditorBody.jsx":"27"},{"size":270,"mtime":1636647280000,"results":"28","hashOfConfig":"29"},{"size":1201,"mtime":1636647280000,"results":"30","hashOfConfig":"29"},{"size":2318,"mtime":1643105141247,"results":"31","hashOfConfig":"29"},{"size":605,"mtime":1644654138425,"results":"32","hashOfConfig":"29"},{"size":863,"mtime":1636647280000,"results":"33","hashOfConfig":"29"},{"size":676,"mtime":1643949407357,"results":"34","hashOfConfig":"29"},{"size":2683,"mtime":1636647280000,"results":"35","hashOfConfig":"29"},{"size":4329,"mtime":1636647280000,"results":"36","hashOfConfig":"29"},{"size":2846,"mtime":1636647280000,"results":"37","hashOfConfig":"29"},{"size":1220,"mtime":1643105204839,"results":"38","hashOfConfig":"29"},{"size":1053,"mtime":1644345637394,"results":"39","hashOfConfig":"29"},{"size":1070,"mtime":1636647280000,"results":"40","hashOfConfig":"29"},{"size":1131,"mtime":1642962802022,"results":"41","hashOfConfig":"29"},{"size":554,"mtime":1642086950456,"results":"42","hashOfConfig":"29"},{"size":2253,"mtime":1642088029853,"results":"43","hashOfConfig":"29"},{"size":1069,"mtime":1644345364141,"results":"44","hashOfConfig":"29"},{"size":1077,"mtime":1644345602322,"results":"45","hashOfConfig":"29"},{"size":2140,"mtime":1636647280000,"results":"46","hashOfConfig":"29"},{"size":2337,"mtime":1644654902313,"results":"47","hashOfConfig":"29"},{"size":763,"mtime":1636647280000,"results":"48","hashOfConfig":"29"},{"size":414,"mtime":1644692806543,"results":"49","hashOfConfig":"29"},{"size":2877,"mtime":1644345739471,"results":"50","hashOfConfig":"29"},{"size":2901,"mtime":1643130174439,"results":"51","hashOfConfig":"29"},{"size":3773,"mtime":1644345868087,"results":"52","hashOfConfig":"29"},{"size":2891,"mtime":1644345844426,"results":"53","hashOfConfig":"29"},{"size":414,"mtime":1644691910816,"results":"54","hashOfConfig":"29"},{"size":10073,"mtime":1644692668175,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ioh4da",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"D:\\SmartSetGo\\classroom\\src\\index.js",[],["112","113"],"D:\\SmartSetGo\\classroom\\src\\context\\context.js",[],"D:\\SmartSetGo\\classroom\\src\\App.js",[],"D:\\SmartSetGo\\classroom\\src\\lib\\firebase.js",[],"D:\\SmartSetGo\\classroom\\src\\routes\\Routes.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\index.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\CreateClass\\CreateClass.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\JoinClass\\JoinClass.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Drawer\\Drawer.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Main.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\PostVideo\\PostVideo.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Announcment\\Announcment.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\JoinedClasses\\JoinedClasses.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Login\\Login.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Header\\Header.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Assignmnets\\Assignments.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\LectureNotes\\LectureNotes.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\CreateClass\\Form.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Tabs.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Header\\style.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\CodeIde.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Notes.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Announce.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Assignment.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\Videos.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\MaterialTheming.js",[],"D:\\SmartSetGo\\classroom\\src\\components\\Main\\CodeEditor\\components\\EditorBody.jsx",["114"],"import React from \"react\";\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\nimport \"ace-builds/src-noconflict/mode-csharp\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-ruby\";\r\nimport \"ace-builds/src-noconflict/mode-kotlin\";\r\nimport \"ace-builds/src-noconflict/mode-swift\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  createStyles,\r\n  Backdrop,\r\n  CircularProgress,\r\n  LinearProgress,\r\n  Theme\r\n} from \"@material-ui/core\";\r\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n// import { darkTheme } from \"../../../components/MaterialTheming\";\r\n\r\n// import firebase from \"../../../components/firebase.js\";\r\nimport axios from \"axios\";\r\nimport { darkTheme } from \"../../MaterialTheming\";\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    body: {\r\n      display: \"grid\",\r\n      gridGap: \"0 20px\",\r\n      gridTemplateRows: \"calc(100% - 200px) 200px\",\r\n      // \"& .ace_selection\": {\r\n      //   background: \"#ff711e36 !important\"\r\n      // },\r\n      \"& .ace_gutter\": {\r\n        backgroundColor: \"#19202b\"\r\n      },\r\n      \"& .ace_editor\": {\r\n        backgroundColor: \"#19202b\"\r\n      },\r\n      \"& .ace_support.ace_function\": {\r\n        color: \"#2196F3\"\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        gridTemplateRows: \"unset\",\r\n        gridTemplateColumns: \"calc(100% - 350px) 330px\"\r\n      }\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: \"#fff\"\r\n    },\r\n    editor: {\r\n      height: \"100% !important\",\r\n      width: \"100% !important\",\r\n      borderBottom: \"2px solid #2196F3\",\r\n      \"& *\": {\r\n        fontFamily: \"monospace\"\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        borderBottom: \"none\",\r\n        borderRight: \"2px solid #2196F3\"\r\n      }\r\n    },\r\n    output: {\r\n      display: \"grid\",\r\n      gridTemplateRows: \"auto 1fr auto\"\r\n    },\r\n    selectlang: {\r\n      height: \"32px\",\r\n      margin: \"7px 0\",\r\n      textAlign: \"left !important\"\r\n    },\r\n    runPanel: {\r\n      textAlign: \"left !important\"\r\n    },\r\n    runBtn: {\r\n      marginRight: 10\r\n    },\r\n    inputModal: {\r\n      height: \"fit-content\",\r\n      width: \"90%\",\r\n      maxHeight: 500,\r\n      maxWidth: 400,\r\n      background: \"#19202b\",\r\n      borderRadius: \"5px\",\r\n      padding: 15,\r\n      textAlign: \"left\",\r\n      \"& text\": {\r\n        display: \"block\",\r\n        color: \"#2196F3\",\r\n        fontSize: \"20px\"\r\n      },\r\n      \"& smallertext\": {\r\n        display: \"block\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    modalInput: {\r\n      width: \"100%\",\r\n      marginTop: \"10px\"\r\n    },\r\n    runBtnOnModal: {\r\n      marginTop: \"20px\"\r\n    },\r\n    buttonProgress: {\r\n      color: \"white\",\r\n      margin: \"auto\"\r\n    },\r\n    outputTitle: {\r\n      color: \"#2196F3\",\r\n      margin: \"7px 0\",\r\n      textAlign: \"left !important\"\r\n    },\r\n    outputTerminal: {\r\n      textAlign: \"left\",\r\n      color: \"white\",\r\n      overflow: \"auto\",\r\n      whiteSpace: \"pre-line\",\r\n      fontFamily: \"monospace\",\r\n      fontSize: \"17px\"\r\n    }\r\n  })\r\n);\r\n\r\nfunction EditorBody({ storeAt, index }) {\r\n  const classes = useStyles();\r\n  const [codeFontSize, setCodeFontSize] = React.useState(20),\r\n    [showLoader, setShowLoader] = React.useState(true),\r\n    [lang, selectlang] = React.useState(\"\"),\r\n    [editorLanguage, setEditorLanguage] = React.useState(\"c_cpp\"),\r\n    [code, setCode] = React.useState(``),\r\n    [outputValue, setOutputValue] = React.useState(\"\"),\r\n    [takeInput, setTakeInput] = React.useState(false),\r\n    [executing, setExecuting] = React.useState(false),\r\n    [input, setInput] = React.useState(\"\");\r\n\r\n  // let notOwner = true;\r\n\r\n  // function setNotOwner(bool) {\r\n  //   notOwner = bool;\r\n  // }\r\n\r\n  // if (\r\n  //   localStorage.getItem(\"codex-codes\") &&\r\n  //   JSON.parse(localStorage.getItem(\"codex-codes\"))[index].key ===\r\n  //   storeAt.substring(storeAt.indexOf(\"/\") + 1)\r\n  // )\r\n  //   setNotOwner(false);\r\n  // console.log(\"Let edit: \" + notOwner);\r\n\r\n  // console.log(storeAt);\r\n\r\n  window.addEventListener(\"resize\", (e) => {\r\n    if (window.innerWidth > 600) {\r\n      setCodeFontSize(20);\r\n    } else {\r\n      setCodeFontSize(14);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (window.innerWidth > 600) setCodeFontSize(20);\r\n    else setCodeFontSize(14);\r\n\r\n    // firebase\r\n    //   .database()\r\n    //   .ref(storeAt)\r\n    //   .once(\"value\")\r\n    //   .then((snap) => {\r\n    //     setShowLoader(false);\r\n    //     selectlang(snap.val().language);\r\n    //     setCode(snap.val().code);\r\n    //   });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (lang !== \"\") {\r\n      let langArray = {\r\n        cpp: \"c_cpp\",\r\n        java: \"java\",\r\n        c: \"c_cpp\",\r\n        cs: \"csharp\",\r\n        rb: \"ruby\",\r\n        py: \"python\",\r\n        kt: \"kotlin\",\r\n        swift: \"swift\"\r\n      };\r\n      console.log(langArray[lang]);\r\n      setEditorLanguage(langArray[lang]);\r\n    }\r\n    // if (lang !== \"\" && !notOwner) {\r\n    //   firebase\r\n    //     .database()\r\n    //     .ref(storeAt + \"/language\")\r\n    //     .set(lang);\r\n    //   if (localStorage.getItem(\"codex-codes\")) {\r\n    //     let classNames = JSON.parse(localStorage.getItem(\"codex-codes\"));\r\n    //     classNames[index].lang = lang;\r\n    //     localStorage.setItem(\"codex-codes\", JSON.stringify(classNames));\r\n    //   }\r\n    // }\r\n  }, [lang]);\r\n\r\n  // React.useEffect(() => {\r\n  //   if (code.trim() !== \"\" ) {\r\n  //     firebase\r\n  //       .database()\r\n  //       .ref(storeAt + \"/code\")\r\n  //       .set(code);\r\n  //   }\r\n  // }, [code]);\r\n\r\n  const createExecutionRequest = () => {\r\n    setTakeInput(false);\r\n    setExecuting(true);\r\n    var data = {\r\n      code: code,\r\n      language: lang,\r\n      input: input\r\n    };\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url:\r\n        \"https://codexweb.netlify.app/.netlify/functions/enforceCode\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: data\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        setExecuting(false);\r\n        setOutputValue(response.data.output);\r\n      })\r\n      .catch(function (error) {\r\n        setExecuting(false);\r\n        setOutputValue(\"Network Error\");\r\n      });\r\n  };\r\n\r\n  function SelectLanguage() {\r\n    return (\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={lang}\r\n        onChange={(e) => {\r\n          selectlang(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        className={classes.selectlang}\r\n        disabled={executing}\r\n        \r\n      >\r\n        <MenuItem value={\"cpp\"}>C++</MenuItem>\r\n        <MenuItem value={\"c\"}>C</MenuItem>\r\n        <MenuItem value={\"cs\"}>C#</MenuItem>\r\n        <MenuItem value={\"java\"}>Java</MenuItem>\r\n        <MenuItem value={\"py\"}>Python3</MenuItem>\r\n        <MenuItem value={\"rb\"}>Ruby</MenuItem>\r\n        <MenuItem value={\"kt\"}>Kotlin</MenuItem>\r\n        <MenuItem value={\"swift\"}>Swift</MenuItem>\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={showLoader}\r\n        onClick={() => {\r\n          setShowLoader(false);\r\n        }}\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Backdrop>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={takeInput}\r\n        onClick={() => {\r\n          setTakeInput(false);\r\n          setExecuting(false);\r\n        }}\r\n      >\r\n        <div\r\n          className={classes.inputModal}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          <text>Input</text>\r\n          <smallertext>\r\n            If your code requires an input, please type it down below otherwise\r\n            leave it empty. For multiple inputs, type in all your inputs line by\r\n            line.\r\n          </smallertext>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"STD Input\"\r\n            variant=\"filled\"\r\n            className={classes.modalInput}\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n            spellCheck={false}\r\n            rowsMax={7}\r\n            multiline\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.runBtnOnModal}\r\n            startIcon={<PlayArrowRoundedIcon />}\r\n            onClick={createExecutionRequest}\r\n          >\r\n            Run\r\n          </Button>\r\n        </div>\r\n      </Backdrop>\r\n      <div className={classes.body}>\r\n        <AceEditor\r\n          mode={editorLanguage}\r\n          theme=\"dracula\"\r\n          onChange={(e) => {\r\n            setCode(e);\r\n          }}\r\n          name=\"UNIQUE_ID_OF_DIV\"\r\n          setOptions={{\r\n            showPrintMargin: false,\r\n            fontSize: codeFontSize\r\n          }}\r\n          value={code}\r\n          className={classes.editor}\r\n          \r\n        />\r\n        <div className={classes.output}>\r\n          <div className={classes.outputTitle}>Output</div>\r\n          <div className={classes.outputTerminal}>{`${outputValue}`}</div>\r\n          <div className={classes.runPanel}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.runBtn}\r\n              startIcon={<PlayArrowRoundedIcon />}\r\n              onClick={() => {\r\n                setTakeInput(true);\r\n              }}\r\n              disabled={executing}\r\n            >\r\n              Run\r\n            </Button>\r\n            <SelectLanguage />\r\n            {executing && (\r\n              <LinearProgress size={14} className={classes.buttonProgress} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default EditorBody;\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":23,"column":3,"nodeType":"121","messageId":"122","endLine":23,"endColumn":8},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]